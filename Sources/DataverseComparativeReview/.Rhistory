names <- sapply(names, function(x) paste(strwrap(x, width = colwidth),  collapse="\n"))
names
}
rownames(underGraphTableTotals) <- wrap_text(
c("Código Aberto",
"Livre (\"Free To Use\")",
"Núm. Conj. Dados (6/2017)",
"Num. Fich. (5/2017)",
"Num. Util. (5/2017)",
"Certificação",
"Infraestrutura"
), 10)
colnames(underGraphTableTotals) <- wrap_text((totals %>% arrange(desc(score)))$platform, colwidth)
underGraphTableTotals[underGraphTableTotals[,] == "No"] <- "Não"
underGraphTableTotals[underGraphTableTotals[,] == "Yes"] <- "Sim"
underGraphTableTotals[underGraphTableTotals[,] == "Unknown"] <- "N/D"
underGraphTableTotals[underGraphTableTotals[,] == "Yes - Data Seal of Approval; World Data System"] <- "Sim\n (DSA+WDS)"
underGraphTableTotals[underGraphTableTotals[,] == "No - Currently working toward ISO certification."] <- "Não - ISO \nno futuro"
# Create a table
thm <- ttheme_default(colhead =
# first unit is the width, and second the height
list(fg_params=list(cex = 0.9), padding=unit.c(unit(12, "mm"), unit(3, "mm"))),
)
tab = tableGrob(underGraphTableTotals,
rows=rownames(underGraphTableTotals),
cols = colnames(underGraphTableTotals),
theme=thm,
vp = NULL)
# create plot with table underneath
# margin: unit(c(top, right, bottom, left), units)
p <- ggplot(totals, aes(x=reorder(platform,-score), y=score))+
geom_bar(stat='identity', fill="plum")+
ylab("Pontuação de funcionalidades") +
xlab(NULL) +
theme(axis.text = element_text(size=11)
#axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
) +
# wrap labels
scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +
geom_text(data=totals, aes(x=reorder(platform,-score), y=(score - 1000), label = score), vjust=0)+
theme(plot.margin=unit(c(1.7,1,14,2),"cm")) +
annotation_custom(tab, xmin=1, xmax=9, ymin=-12000, ymax=-23000)
ggsave("plot.pdf", plot = p, scale = 1, width = 13.1, height = 9.03, units = "in", dpi = 300, limitsize = T, device=NULL)
if (!require(pacman)) {
install.packages("pacman")
library(pacman)
}
# For Ubuntu 20.04 focal:
# sudo add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/'
# sudo apt update
# sudo apt install r-base r-base-core r-recommended r-base-dev
# sudo add-apt-repository ppa:c2d4u.team/c2d4u4.0+
# sudo apt update
# sudo apt install r-cran-rgl r-cran-rjags r-cran-snow r-cran-ggplot2 r-cran-igraph r-cran-lme4 r-cran-rjava r-cran-devtools r-cran-roxygen2 r-cran-rjava
pacman::p_load(readxl,data.table,dplyr,lsa,text2vec,stringr,ggplot2,readODS,grid,gridExtra,reshape2,emojifont,scales)
source("./read_data.R")
source("./get_repo_features.R")
# read manually validated table
sim <- readODS::read_ods(path = "similarities_validated.ods", sheet = "Sheet1", col_names = T, row_names = F)
matches <- melt(data = data.table(sim),
measure.vars = dataverse_parameters$description,
na.rm = T)
matches$feature <- NULL
colnames(matches) <- c("rda_feature", "weight", "dataverse_feature", "match")
merged <- merge(x = matches, y=repoFeatures, by="dataverse_feature")
merged[,3:ncol(merged)] <- merged %>%
select(c('weight',
'match',
'Analyze Boston (CKAN)',
'data.world',
'Dryad',
'figshare',
'Harvard Dataverse',
'Mendeley Data',
'Open ICPSR',
'Zenodo',
'Open Science Framework',
'Dendro'
)) %>%
mutate_all(as.numeric)
merged[,5:ncol(merged)] <- merged[,5:ncol(merged)] * merged$weight
totals <- colSums(merged[,5:ncol(merged)])
totals <- as.data.frame(totals)
totals$platform <- rownames(totals)
totals <- merge(totals, open_source)
totals <- merge(totals, free)
totals <- merge(totals, n_datasets)
totals <- merge(totals, n_files)
totals <- merge(totals, n_users)
totals <- merge(totals, certified)
totals <- merge(totals, infrastructure)
colnames(totals) <- c("platform","score", "open_source", "free", "n_datasets", "n_files", "n_users", "certified", "infrastructure")
underGraphTableTotals <- t(totals %>%
arrange(desc(score)) %>%
select(c("open_source", "free", "n_datasets", "n_files", "n_users", "certified", "infrastructure")))
# text wrapping for columns of the table under the graph
colwidth <- 7
wrap_text <- function(names, colwidth)
{
names <- sapply(names, function(x) paste(strwrap(x, width = colwidth),  collapse="\n"))
names
}
rownames(underGraphTableTotals) <- wrap_text(
c("Código Aberto",
"Livre (\"Free To Use\")",
"Núm. Conj. Dados (6/2017)",
"Num. Fich. (5/2017)",
"Num. Util. (5/2017)",
"Certificação",
"Infraestrutura"
), 10)
colnames(underGraphTableTotals) <- wrap_text((totals %>% arrange(desc(score)))$platform, colwidth)
underGraphTableTotals[underGraphTableTotals[,] == "No"] <- "Não"
underGraphTableTotals[underGraphTableTotals[,] == "Yes"] <- "Sim"
underGraphTableTotals[underGraphTableTotals[,] == "Unknown"] <- "N/D"
underGraphTableTotals[underGraphTableTotals[,] == "Yes - Data Seal of Approval; World Data System"] <- "Sim\n (DSA+WDS)"
underGraphTableTotals[underGraphTableTotals[,] == "No - Currently working toward ISO certification."] <- "Não - ISO \nno futuro"
# Create a table
thm <- ttheme_default(colhead =
# first unit is the width, and second the height
list(fg_params=list(cex = 0.9), padding=unit.c(unit(12, "mm"), unit(3, "mm"))),
)
tab = tableGrob(underGraphTableTotals,
rows=rownames(underGraphTableTotals),
cols = colnames(underGraphTableTotals),
theme=thm,
vp = NULL)
# create plot with table underneath
# margin: unit(c(top, right, bottom, left), units)
p <- ggplot(totals, aes(x=reorder(platform,-score), y=score))+
geom_bar(stat='identity', fill="plum")+
ylab("Pontuação de funcionalidades") +
xlab(NULL) +
theme(axis.text = element_text(size=11)
#axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
) +
# wrap labels
scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +
geom_text(data=totals, aes(x=reorder(platform,-score), y=(score - 1000), label = score), vjust=0)+
theme(plot.margin=unit(c(1.7,1,14,2),"cm")) +
annotation_custom(tab, xmin=1, xmax=9, ymin=-10000, ymax=-23000)
ggsave("plot.pdf", plot = p, scale = 1, width = 13.1, height = 9.03, units = "in", dpi = 300, limitsize = T, device=NULL)
if (!require(pacman)) {
install.packages("pacman")
library(pacman)
}
# For Ubuntu 20.04 focal:
# sudo add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/'
# sudo apt update
# sudo apt install r-base r-base-core r-recommended r-base-dev
# sudo add-apt-repository ppa:c2d4u.team/c2d4u4.0+
# sudo apt update
# sudo apt install r-cran-rgl r-cran-rjags r-cran-snow r-cran-ggplot2 r-cran-igraph r-cran-lme4 r-cran-rjava r-cran-devtools r-cran-roxygen2 r-cran-rjava
pacman::p_load(readxl,data.table,dplyr,lsa,text2vec,stringr,ggplot2,readODS,grid,gridExtra,reshape2,emojifont,scales)
source("./read_data.R")
source("./get_repo_features.R")
# read manually validated table
sim <- readODS::read_ods(path = "similarities_validated.ods", sheet = "Sheet1", col_names = T, row_names = F)
matches <- melt(data = data.table(sim),
measure.vars = dataverse_parameters$description,
na.rm = T)
matches$feature <- NULL
colnames(matches) <- c("rda_feature", "weight", "dataverse_feature", "match")
merged <- merge(x = matches, y=repoFeatures, by="dataverse_feature")
merged[,3:ncol(merged)] <- merged %>%
select(c('weight',
'match',
'Analyze Boston (CKAN)',
'data.world',
'Dryad',
'figshare',
'Harvard Dataverse',
'Mendeley Data',
'Open ICPSR',
'Zenodo',
'Open Science Framework',
'Dendro'
)) %>%
mutate_all(as.numeric)
merged[,5:ncol(merged)] <- merged[,5:ncol(merged)] * merged$weight
totals <- colSums(merged[,5:ncol(merged)])
totals <- as.data.frame(totals)
totals$platform <- rownames(totals)
totals <- merge(totals, open_source)
totals <- merge(totals, free)
totals <- merge(totals, n_datasets)
totals <- merge(totals, n_files)
totals <- merge(totals, n_users)
totals <- merge(totals, certified)
totals <- merge(totals, infrastructure)
colnames(totals) <- c("platform","score", "open_source", "free", "n_datasets", "n_files", "n_users", "certified", "infrastructure")
underGraphTableTotals <- t(totals %>%
arrange(desc(score)) %>%
select(c("open_source", "free", "n_datasets", "n_files", "n_users", "certified", "infrastructure")))
# text wrapping for columns of the table under the graph
colwidth <- 7
wrap_text <- function(names, colwidth)
{
names <- sapply(names, function(x) paste(strwrap(x, width = colwidth),  collapse="\n"))
names
}
rownames(underGraphTableTotals) <- wrap_text(
c("Código Aberto",
"Livre (\"Free To Use\")",
"Núm. Conjuntos Dados (6/2017)",
"Num. Ficheiros (5/2017)",
"Num. Utilizadores (5/2017)",
"Certificação",
"Infraestrutura"
), 10)
colnames(underGraphTableTotals) <- wrap_text((totals %>% arrange(desc(score)))$platform, colwidth)
underGraphTableTotals[underGraphTableTotals[,] == "No"] <- "Não"
underGraphTableTotals[underGraphTableTotals[,] == "Yes"] <- "Sim"
underGraphTableTotals[underGraphTableTotals[,] == "Unknown"] <- "N/D"
underGraphTableTotals[underGraphTableTotals[,] == "Yes - Data Seal of Approval; World Data System"] <- "Sim\n (DSA+WDS)"
underGraphTableTotals[underGraphTableTotals[,] == "No - Currently working toward ISO certification."] <- "Não - ISO \nno futuro"
# Create a table
thm <- ttheme_default(colhead =
# first unit is the width, and second the height
list(fg_params=list(cex = 0.9), padding=unit.c(unit(12, "mm"), unit(3, "mm"))),
)
tab = tableGrob(underGraphTableTotals,
rows=rownames(underGraphTableTotals),
cols = colnames(underGraphTableTotals),
theme=thm,
vp = NULL)
# create plot with table underneath
# margin: unit(c(top, right, bottom, left), units)
p <- ggplot(totals, aes(x=reorder(platform,-score), y=score))+
geom_bar(stat='identity', fill="plum")+
ylab("Pontuação de funcionalidades") +
xlab(NULL) +
theme(axis.text = element_text(size=11)
#axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
) +
# wrap labels
scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +
geom_text(data=totals, aes(x=reorder(platform,-score), y=(score - 1000), label = score), vjust=0)+
theme(plot.margin=unit(c(1.7,1,14,2),"cm")) +
annotation_custom(tab, xmin=1, xmax=9, ymin=-10000, ymax=-23000)
ggsave("plot.pdf", plot = p, scale = 1, width = 13.1, height = 9.03, units = "in", dpi = 300, limitsize = T, device=NULL)
if (!require(pacman)) {
install.packages("pacman")
library(pacman)
}
# For Ubuntu 20.04 focal:
# sudo add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/'
# sudo apt update
# sudo apt install r-base r-base-core r-recommended r-base-dev
# sudo add-apt-repository ppa:c2d4u.team/c2d4u4.0+
# sudo apt update
# sudo apt install r-cran-rgl r-cran-rjags r-cran-snow r-cran-ggplot2 r-cran-igraph r-cran-lme4 r-cran-rjava r-cran-devtools r-cran-roxygen2 r-cran-rjava
pacman::p_load(readxl,data.table,dplyr,lsa,text2vec,stringr,ggplot2,readODS,grid,gridExtra,reshape2,emojifont,scales)
source("./read_data.R")
source("./get_repo_features.R")
# read manually validated table
sim <- readODS::read_ods(path = "similarities_validated.ods", sheet = "Sheet1", col_names = T, row_names = F)
matches <- melt(data = data.table(sim),
measure.vars = dataverse_parameters$description,
na.rm = T)
matches$feature <- NULL
colnames(matches) <- c("rda_feature", "weight", "dataverse_feature", "match")
merged <- merge(x = matches, y=repoFeatures, by="dataverse_feature")
merged[,3:ncol(merged)] <- merged %>%
select(c('weight',
'match',
'Analyze Boston (CKAN)',
'data.world',
'Dryad',
'figshare',
'Harvard Dataverse',
'Mendeley Data',
'Open ICPSR',
'Zenodo',
'Open Science Framework',
'Dendro'
)) %>%
mutate_all(as.numeric)
merged[,5:ncol(merged)] <- merged[,5:ncol(merged)] * merged$weight
totals <- colSums(merged[,5:ncol(merged)])
totals <- as.data.frame(totals)
totals$platform <- rownames(totals)
totals <- merge(totals, open_source)
totals <- merge(totals, free)
totals <- merge(totals, n_datasets)
totals <- merge(totals, n_files)
totals <- merge(totals, n_users)
totals <- merge(totals, certified)
totals <- merge(totals, infrastructure)
colnames(totals) <- c("platform","score", "open_source", "free", "n_datasets", "n_files", "n_users", "certified", "infrastructure")
underGraphTableTotals <- t(totals %>%
arrange(desc(score)) %>%
select(c("open_source", "free", "n_datasets", "n_files", "n_users", "certified", "infrastructure")))
# text wrapping for columns of the table under the graph
colwidth <- 7
wrap_text <- function(names, colwidth)
{
names <- sapply(names, function(x) paste(strwrap(x, width = colwidth),  collapse="\n"))
names
}
rownames(underGraphTableTotals) <- wrap_text(
c("Código Aberto",
"Grátis (\"Free To Use\")",
"Núm. Conjuntos Dados (6/2017)",
"Num. Ficheiros (5/2017)",
"Num. Utilizadores (5/2017)",
"Certificação",
"Infraestrutura"
), 10)
colnames(underGraphTableTotals) <- wrap_text((totals %>% arrange(desc(score)))$platform, colwidth)
underGraphTableTotals[underGraphTableTotals[,] == "No"] <- "Não"
underGraphTableTotals[underGraphTableTotals[,] == "Yes"] <- "Sim"
underGraphTableTotals[underGraphTableTotals[,] == "Unknown"] <- "N/D"
underGraphTableTotals[underGraphTableTotals[,] == "Yes - Data Seal of Approval; World Data System"] <- "Sim\n (DSA+WDS)"
underGraphTableTotals[underGraphTableTotals[,] == "No - Currently working toward ISO certification."] <- "Não - ISO \nno futuro"
# Create a table
thm <- ttheme_default(colhead =
# first unit is the width, and second the height
list(fg_params=list(cex = 0.9), padding=unit.c(unit(12, "mm"), unit(3, "mm"))),
)
tab = tableGrob(underGraphTableTotals,
rows=rownames(underGraphTableTotals),
cols = colnames(underGraphTableTotals),
theme=thm,
vp = NULL)
# create plot with table underneath
# margin: unit(c(top, right, bottom, left), units)
p <- ggplot(totals, aes(x=reorder(platform,-score), y=score))+
geom_bar(stat='identity', fill="plum")+
ylab("Pontuação de funcionalidades") +
xlab(NULL) +
theme(axis.text = element_text(size=11)
#axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
) +
# wrap labels
scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +
geom_text(data=totals, aes(x=reorder(platform,-score), y=(score - 1000), label = score), vjust=0)+
theme(plot.margin=unit(c(1.7,1,14,2),"cm")) +
annotation_custom(tab, xmin=1, xmax=9, ymin=-10000, ymax=-23000)
ggsave("plot.pdf", plot = p, scale = 1, width = 13.1, height = 9.03, units = "in", dpi = 300, limitsize = T, device=NULL)
if (!require(pacman)) {
install.packages("pacman")
library(pacman)
}
pacman::p_load(readxl,data.table,dplyr,lsa,text2vec,stringr,readODS)
threshold <- 0.40
Comparative <- read_excel("Comparative.xlsx",
sheet = "Cross", col_names = FALSE)
rda_parameters <- transpose(Comparative[1:4,])
rda_parameters <- na.omit(rda_parameters)
colnames(rda_parameters) <- c("category", "feature", "description", "weight")
rownames(rda_parameters)<- c(1:nrow(rda_parameters))
dataverse_parameters <- Comparative[1:2]
dataverse_parameters <- na.omit(dataverse_parameters)
colnames(dataverse_parameters) <- c("category", "description")
dataverse_parameters <- dataverse_parameters %>%
filter(category != 'Business model' & description != "Road Maps" & description != "Preservation technology?")
all_parameters <- append(rda_parameters$"description", dataverse_parameters$"description")
select_and_add_platforms_column <- function(df, column_name)
{
df <- df %>% select(c(
'Analyze Boston (CKAN)',
'data.world',
'Dryad',
'figshare',
'Harvard Dataverse',
'Mendeley Data',
'Open ICPSR',
'Zenodo',
'Open Science Framework',
'Dendro'
))
df <- t(df)
df <- cbind(rownames(df), df[,1])
rownames(df) <- c(1:nrow(df))
colnames(df) <- c("platform", column_name)
df
}
open_source <- read_excel("Comparative.xlsx",
sheet = "Comparative review of data repo", col_names = T) %>%
filter(`Software Features` == "Open Source")
open_source <- select_and_add_platforms_column(open_source, "open_source")
free <- read_excel("Comparative.xlsx",
sheet = "Comparative review of data repo", col_names = T) %>%
filter(`Software Features` == 'Free To Use')
free <- select_and_add_platforms_column(free, "free")
n_datasets <- read_excel("Comparative.xlsx",
sheet = "Comparative review of data repo", col_names = T) %>%
filter(`Software Features` == 'Total # of published datasets as of July 2017')
n_datasets <- select_and_add_platforms_column(n_datasets, "n_datasets")
n_files <- read_excel("Comparative.xlsx",
sheet = "Comparative review of data repo", col_names = T) %>%
filter(`Software Features` == 'Total # of published files as of May 2017')
n_files <- select_and_add_platforms_column(n_files, "n_files")
n_users <- read_excel("Comparative.xlsx",
sheet = "Comparative review of data repo",
col_names = T) %>%
filter(`Software Features` == 'Total # of public users as of May 2017')
n_users <- select_and_add_platforms_column(n_users, "n_users")
certified <- read_excel("Comparative.xlsx",
sheet = "Comparative review of data repo",
col_names = T) %>%
filter(`Software Features` == 'Certification?')
certified <- select_and_add_platforms_column(certified, "certified")
infrastructure <- read_excel("Comparative.xlsx",
sheet = "Comparative review of data repo",
col_names = T) %>%
filter(`Software Features` == 'Infrastructure is turnkey, installable on premises, or both?')
infrastructure <- select_and_add_platforms_column(infrastructure, "infrastructure")
infrastructure[infrastructure %like% "Both"] <- "SaaS + Local"
infrastructure[infrastructure %like% "Turnkey"] <- "SaaS"
infrastructure[infrastructure %like% "Premises"] <- "Local"
if (!require(pacman)) {
install.packages("pacman")
library(pacman)
}
# For Ubuntu 20.04 focal:
# sudo add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/'
# sudo apt update
# sudo apt install r-base r-base-core r-recommended r-base-dev
# sudo add-apt-repository ppa:c2d4u.team/c2d4u4.0+
# sudo apt update
# sudo apt install r-cran-rgl r-cran-rjags r-cran-snow r-cran-ggplot2 r-cran-igraph r-cran-lme4 r-cran-rjava r-cran-devtools r-cran-roxygen2 r-cran-rjava
pacman::p_load(readxl,data.table,dplyr,lsa,text2vec,stringr,ggplot2,readODS,grid,gridExtra,reshape2,emojifont,scales)
source("./read_data.R")
source("./get_repo_features.R")
# read manually validated table
sim <- readODS::read_ods(path = "similarities_validated.ods", sheet = "Sheet1", col_names = T, row_names = F)
matches <- melt(data = data.table(sim),
measure.vars = dataverse_parameters$description,
na.rm = T)
matches$feature <- NULL
colnames(matches) <- c("rda_feature", "weight", "dataverse_feature", "match")
merged <- merge(x = matches, y=repoFeatures, by="dataverse_feature")
merged[,3:ncol(merged)] <- merged %>%
select(c('weight',
'match',
'Analyze Boston (CKAN)',
'data.world',
'Dryad',
'figshare',
'Harvard Dataverse',
'Mendeley Data',
'Open ICPSR',
'Zenodo',
'Open Science Framework',
'Dendro'
)) %>%
mutate_all(as.numeric)
merged[,5:ncol(merged)] <- merged[,5:ncol(merged)] * merged$weight
totals <- colSums(merged[,5:ncol(merged)])
totals <- as.data.frame(totals)
totals$platform <- rownames(totals)
totals <- merge(totals, open_source)
totals <- merge(totals, free)
totals <- merge(totals, n_datasets)
totals <- merge(totals, n_files)
totals <- merge(totals, n_users)
totals <- merge(totals, certified)
totals <- merge(totals, infrastructure)
colnames(totals) <- c("platform","score", "open_source", "free", "n_datasets", "n_files", "n_users", "certified", "infrastructure")
underGraphTableTotals <- t(totals %>%
arrange(desc(score)) %>%
select(c("open_source", "free", "n_datasets", "n_files", "n_users", "certified", "infrastructure")))
# text wrapping for columns of the table under the graph
colwidth <- 7
wrap_text <- function(names, colwidth)
{
names <- sapply(names, function(x) paste(strwrap(x, width = colwidth),  collapse="\n"))
names
}
rownames(underGraphTableTotals) <- wrap_text(
c("Código Aberto",
"Grátis (\"Free To Use\")",
"Núm. Conjuntos Dados (6/2017)",
"Num. Ficheiros (5/2017)",
"Num. Utilizadores (5/2017)",
"Certificação",
"Infraestrutura"
), 10)
colnames(underGraphTableTotals) <- wrap_text((totals %>% arrange(desc(score)))$platform, colwidth)
underGraphTableTotals[underGraphTableTotals[,] == "No"] <- "Não"
underGraphTableTotals[underGraphTableTotals[,] == "Yes"] <- "Sim"
underGraphTableTotals[underGraphTableTotals[,] == "Unknown"] <- "N/D"
underGraphTableTotals[underGraphTableTotals[,] == "Yes - Data Seal of Approval; World Data System"] <- "Sim\n (DSA+WDS)"
underGraphTableTotals[underGraphTableTotals[,] == "No - Currently working toward ISO certification."] <- "Não - ISO \nno futuro"
# Create a table
thm <- ttheme_default(colhead =
# first unit is the width, and second the height
list(fg_params=list(cex = 0.9), padding=unit.c(unit(12, "mm"), unit(3, "mm"))),
)
tab = tableGrob(underGraphTableTotals,
rows=rownames(underGraphTableTotals),
cols = colnames(underGraphTableTotals),
theme=thm,
vp = NULL)
# create plot with table underneath
# margin: unit(c(top, right, bottom, left), units)
p <- ggplot(totals, aes(x=reorder(platform,-score), y=score))+
geom_bar(stat='identity', fill="plum")+
ylab("Pontuação de funcionalidades") +
xlab(NULL) +
theme(axis.text = element_text(size=11)
#axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
) +
# wrap labels
scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +
geom_text(data=totals, aes(x=reorder(platform,-score), y=(score - 1000), label = score), vjust=0)+
theme(plot.margin=unit(c(1.7,1,14,2),"cm")) +
annotation_custom(tab, xmin=1, xmax=9, ymin=-10000, ymax=-23000)
ggsave("plot.pdf", plot = p, scale = 1, width = 13.1, height = 9.03, units = "in", dpi = 300, limitsize = T, device=NULL)
source('~/GitHub/repositories-paper-eda/Sources/DataverseComparativeReview/analyse.R', echo=TRUE)
